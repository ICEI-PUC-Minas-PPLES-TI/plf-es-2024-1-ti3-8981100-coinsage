name: 'CI - CoinSage Backend'
on:
  workflow_dispatch:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - 'feature/**'
      - 'fix/**'
      - 'hotfix/**'

jobs:
  code-quality:
    name: 'Code-Quality ðŸ’Ž'
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.11"
    defaults:
      run:
        working-directory: Codigo/backend/
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check repository
        uses: actions/checkout@v3
        with:  # https://github.com/stefanzweifel/git-auto-commit-action#checkout-the-correct-branch
            ref: ${{ github.head_ref }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dev dependencies
        run:  |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with Black
        run: |
          pip install black
          black --check ./src/ --exclude=tests/
      - name: Lint with Isort
        run: |
          isort . --profile black --check-only --diff
      - name: Lint with Flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
      - name: Lint with MyPy
        run: |
          mypy . --pretty

  tests:
    name: 'Tests ðŸ§ª'
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.11"
    defaults:
      run:
        working-directory: Codigo/backend/

    env:
      ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
      DEBUG: ${{ secrets.DEBUG }}
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      SERVER_WORKERS: ${{ secrets.SERVER_WORKERS }}
      IS_ALLOWED_CREDENTIALS: ${{ secrets.IS_ALLOWED_CREDENTIALS }}

    runs-on: ${{ matrix.os }}
    steps:
      - name: Check repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run:  |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install Dependencies for Testing
        run: |
          pip install pytest pytest-asyncio pytest pytest-xdist
      - name: Run Database for Unit Tests
        run: |
            cd ..
            docker compose up -d
      - name: Test with Pytest-Cov
        run: |
          pytest --cov --cov-report xml tests/
