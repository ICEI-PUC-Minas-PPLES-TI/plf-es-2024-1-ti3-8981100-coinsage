"""changing urls to string

Revision ID: 4ee47da0e811
Revises: 5378af3a4474
Create Date: 2024-04-01 19:00:20.650687

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4ee47da0e811"
down_revision: Union[str, None] = "5378af3a4474"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "analysis",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "currencies_info_schedule",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("last_update_time", sa.DateTime(), nullable=True),
        sa.Column("next_scheduled_time", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_currencies_info_schedule_id"), "currencies_info_schedule", ["id"], unique=False)
    op.create_table(
        "currency_base_info",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("symbol", sa.String(length=100), nullable=True),
        sa.Column("cmc_id", sa.Integer(), nullable=True),
        sa.Column("cmc_slug", sa.String(length=100), nullable=True),
        sa.Column("logo", sa.String(length=1000), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("description", sa.String(length=5000), nullable=True),
        sa.Column("_technical_doc", sa.Text(), nullable=True),
        sa.Column("_urls", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("symbol"),
    )
    op.create_table(
        "setor",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=200), nullable=True),
        sa.Column("coinst_quantity", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "analysis_currency_stage_four",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("uuid_analysis", sa.UUID(), nullable=True),
        sa.Column("uuid_currency", sa.UUID(), nullable=True),
        sa.Column("mon_semester_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("mon_quarter_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("mon_mon_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("mon_week_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("variation_consistent", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["uuid_analysis"],
            ["analysis.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["uuid_currency"],
            ["currency_base_info.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "analysis_currency_stage_one",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("uuid_analysis", sa.UUID(), nullable=True),
        sa.Column("uuid_currency", sa.UUID(), nullable=True),
        sa.Column("ranking", sa.Integer(), nullable=True),
        sa.Column("market_value", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("week_increase_percentage", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("increase_date", sa.DateTime(), nullable=True),
        sa.Column("closing_price", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("open_price", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("ema8", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("ema8_greater_open", sa.Boolean(), nullable=True),
        sa.Column("ema8_less_close", sa.Boolean(), nullable=True),
        sa.Column("week_increase_volume", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("increase_volume_day", sa.DateTime(), nullable=True),
        sa.Column("day_before_volume", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("volumes_relation", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("expressive_volume_increase", sa.Boolean(), nullable=True),
        sa.Column("ema_aligned", sa.Boolean(), nullable=True),
        sa.Column("buying_signal", sa.Boolean(), nullable=True),
        sa.Column("today", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["uuid_analysis"],
            ["analysis.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["uuid_currency"],
            ["currency_base_info.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "analysis_currency_stage_three",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("uuid_analysis", sa.UUID(), nullable=True),
        sa.Column("uuid_currency", sa.UUID(), nullable=True),
        sa.Column("year_mon_variation", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("semester_mon_variation", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("quarter_mon_variation", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("month_week_variation", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("week_mon_variation", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("variation_consistent", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["uuid_analysis"],
            ["analysis.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["uuid_currency"],
            ["currency_base_info.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "analysis_currency_stage_two",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("uuid_analysis", sa.UUID(), nullable=True),
        sa.Column("uuid_currency", sa.UUID(), nullable=True),
        sa.Column("year_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("semester_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("quarter_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("month_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("week_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("variation_greater_bitcoin", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["uuid_analysis"],
            ["analysis.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["uuid_currency"],
            ["currency_base_info.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "setor_currency_base_info",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("uuid_setor", sa.UUID(), nullable=True),
        sa.Column("uuid_currency", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["uuid_currency"],
            ["currency_base_info.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["uuid_setor"],
            ["setor.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("setor_currency_base_info")
    op.drop_table("analysis_currency_stage_two")
    op.drop_table("analysis_currency_stage_three")
    op.drop_table("analysis_currency_stage_one")
    op.drop_table("analysis_currency_stage_four")
    op.drop_table("setor")
    op.drop_table("currency_base_info")
    op.drop_index(op.f("ix_currencies_info_schedule_id"), table_name="currencies_info_schedule")
    op.drop_table("currencies_info_schedule")
    op.drop_table("analysis")
    # ### end Alembic commands ###
