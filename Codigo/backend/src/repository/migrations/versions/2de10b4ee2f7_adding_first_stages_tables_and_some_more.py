"""adding first stages tables and some more

Revision ID: 2de10b4ee2f7
Revises: 513b0342d6a8
Create Date: 2024-03-29 21:31:49.454564

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "2de10b4ee2f7"
down_revision: Union[str, None] = "513b0342d6a8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "setor",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=200), nullable=True),
        sa.Column("coinst_quantity", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "analysis_currency_stage_four",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("uuid_analysis", sa.UUID(), nullable=True),
        sa.Column("uuid_currency", sa.UUID(), nullable=True),
        sa.Column("mon_semester_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("mon_quarter_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("mon_mon_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("mon_week_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("variation_consistent", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["uuid_analysis"],
            ["analysis.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["uuid_currency"],
            ["currency_base_info.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "analysis_currency_stage_three",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("uuid_analysis", sa.UUID(), nullable=True),
        sa.Column("uuid_currency", sa.UUID(), nullable=True),
        sa.Column("year_mon_variation", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("semester_mon_variation", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("quarter_mon_variation", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("month_week_variation", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("week_mon_variation", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("variation_consistent", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["uuid_analysis"],
            ["analysis.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["uuid_currency"],
            ["currency_base_info.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "analysis_currency_stage_two",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("uuid_analysis", sa.UUID(), nullable=True),
        sa.Column("uuid_currency", sa.UUID(), nullable=True),
        sa.Column("year_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("semester_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("quarter_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("month_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("week_variation_per", sa.NUMERIC(precision=15, scale=8), nullable=True),
        sa.Column("variation_greater_bitcoin", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["uuid_analysis"],
            ["analysis.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["uuid_currency"],
            ["currency_base_info.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "setor_currency_base_info",
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("uuid_setor", sa.UUID(), nullable=True),
        sa.Column("uuid_currency", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["uuid_currency"],
            ["currency_base_info.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["uuid_setor"],
            ["setor.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("setor_currency_base_info")
    op.drop_table("analysis_currency_stage_two")
    op.drop_table("analysis_currency_stage_three")
    op.drop_table("analysis_currency_stage_four")
    op.drop_table("setor")
    # ### end Alembic commands ###
